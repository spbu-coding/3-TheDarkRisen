Имеем для начала такие данные:

Float_delta = 0.00000000000000000000
Double_delta= 0.00000000000000000000

Для дальнейших действий используем формулы:

Для float:
 answer_f.x2 = (2.0001f + delta - 2) * pow(10, 4);
 answer_f.x1 = 2.0000f - answer_f.x2;
 
Для double:
 answer_d.x2 = (2.0001 + delta - 2) * pow(10, 4);
 answer_d.x1 = 2.0000 - answer_d.x2;
 
 Из формулы мы получаем такие данные:
 double_point: x1 = 1.00000000000000000000 x2 = 1.00000000000000000000
 float_point: x1 = 1.00102615356445312500 x2 = 0.99897384643554687500
 
 Дальше мы присваиваем новые значения float_delta = 0.0001f и double_delta = 0.0001 и проводим новые эксперименты:
 
 Из них мы получаем:
 New double points:x1 = 0.00000000000000000000  x2 = 2.00000000000000000000
 New float points: x1 = 0.00205230712890625000  x2 = 1.99794769287109375000
 
 С помощью новых и старых точек мы находим их растояние.
 
 Последующими шагами будет деление delta на 2 и повторяем те же сами дествия.
 Эксперимент будет продолжаться пока растояние между точками больше 10^-6.
 У меня всего произошло 26 шагов в эксперименте.
 По итогу мы смогли у double уменьшить отклонение в 2^22 раза, а у float в 2^11
 Всё это мы можем увидеть в процессе выполнения этого эксперимента.
